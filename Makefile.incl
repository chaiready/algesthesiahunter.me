##################################
# !!! DO NOT MODIFY THIS FILE !!!
##################################

.PHONY: clean docker release build apitest test deploy rollback logs help shell install-tools

# Project Makefile should change the following
TOP_DIR ?= ./
RELEASE ?=
PROG ?= algesthesiahunter-ui
DEPLOY ?= ${PROG}
CONTAINER ?= ${PROG}
DEV_LANG ?= go
####

GIT_VERSION = `git rev-parse --short HEAD`
GIT_BRANCH = `git rev-parse --abbrev-ref HEAD`
GIT_ROOT = `git rev-parse --show-toplevel`

REPO ?= registry.cn-shenzhen.aliyuncs.com
RLS_REPO ?= registry.cn-shenzhen.aliyuncs.com/algesthesiahunter
DEV_IMG = ${REPO}/${PROG}:${GIT_BRANCH}
RLS_IMG = ${RLS_REPO}/${PROG}:${RELEASE}

BREWABLE = fzf yq jq stern kubectx kubefwd kube-ps1
BREW = $(shell for b in ${BREWABLE}; do brew install $$b || brew upgrade $$b; done)


default: help

docker:
	docker build -f Dockerfile --label gitCommit=${GIT_VERSION} --build-arg gitCommit=${GIT_VERSION} -t ${DEV_IMG} ${TOP_DIR}
	docker push ${DEV_IMG}

release:
ifeq ($(RELEASE),)
	@echo "RELEASE not defined!!!"
else
	docker build -f Dockerfile.release --build-arg version=${RELEASE}  -t ${RLS_IMG} ${TOP_DIR}
	docker push ${RLS_IMG}
endif

build:
ifeq (${DEV_LANG},go)
	CGO_ENABLED=0 go build -a -tags netgo -installsuffix netgo -o ${PROG}
else ifeq (${DEV_LANG},javascript)
	npm run build
else
	@echo "${DEV_LANG} undefined build"
endif
help:
	@echo
	@echo '"make build"' to build binary locally.
	@echo '"make docker"' to build docker imamge locally.
	@echo '"RELEASE=foobar make release"' to build release docker imamge and push to test repo.
	@echo '"make logs"' to view logs with stern
	@echo '"make current"' to view currently deployed image'(s)'
	@echo '"make deploy"' and '"make rollback"' are obvious.
	@echo '"make shell"' launches a shell into a container
	@echo '"make singleton"' scales deployment into a single pod
	@echo '"make restart"' restart deployment
	@echo '"make install-hooks" install pre-commit to .git/hooks'
	@echo '"make install-tools"' to install tools required.
	@echo '"make update-make"' to update this file to latest version.
	@echo

